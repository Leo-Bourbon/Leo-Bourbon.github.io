---
import "@styles/variables.css";

import ThemeSwitcher from "@components/ThemeSwitcher.astro";
import LangSwitcher from "@components/LangSwitcher.astro";
import ProjectCard from "@components/ProjectCard.astro";
import ProjectsLayout from "@layouts/ProjectsLayout.astro";

import * as m from "@paraglide/messages.js";
import { availableLanguageTags, languageTag } from "@paraglide/runtime";
export function getStaticPaths() {
  return availableLanguageTags.map((lang) => ({ params: { lang } }));
}

import { Image } from "astro:assets";

import { getCollection } from "astro:content";
const projectEntries = await getCollection("projects", ({ id }) => {
  return id.startsWith(`${languageTag()}/`);
});

function stripLanguageTag(id: string) {
  return id.replace(`${languageTag()}/`, "");
}
---

<ProjectsLayout
  title={m.projects_page_title()}
  description={m.projects_page_description()}
>
  <Fragment slot="head">
    <!-- <link rel="preload" href={profilePicture.src} as="image" /> -->
  </Fragment>
  <div id="top" class="absolute left-0 right-0 top-0 h-0"></div>
  <!-- Sticky top header -->
  <header id="header" class="sticky top-1 z-20 h-16">
    <div
      class="navbar mx-auto max-w-sm items-stretch justify-evenly rounded-full bg-base-100"
    >
      <a class="link" href=`/${languageTag()}`>{m.home_button()}</a>
      <a class="link" href=`/${languageTag()}#tech-stack-marker`
        >{m.tech_button()}</a
      >
      <a class="link" href=`/${languageTag()}/projects`>{m.projects_button()}</a
      >
      <!-- Theme switcher -->
      <ThemeSwitcher />
      <!-- Lang switcher -->
      <LangSwitcher />
    </div>
  </header>
  <main id="main" class="mb-20 p-2">
    <!-- Projects -->
    <section
      id="projects"
      class="prose relative mb-3 max-w-none text-base xl:ml-2"
    >
      <!-- Scroll marker -->
      <div id="projects-marker" class="absolute left-0 right-0 top-0 h-0"></div>
      <!-- Title -->
      <h2
        id="projects-title"
        class="mb-4 mt-0 min-h-12 rounded-box bg-base-300 p-2 px-4 text-center"
      >
        {m.projects_page_title()}
      </h2>
      <!-- Project cards container -->
      <div
        id="project-cards"
        class="mb-0 grid gap-4 rounded-box bg-base-200 p-2 lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4"
      >
        {
          projectEntries.map((entry) => (
            <div class="project-card-wrapper">
              <ProjectCard otherClasses="h-full">
                <Image
                  slot="image"
                  class="not-prose h-52 max-h-52 min-h-52 object-cover"
                  alt={entry.data.thumbnail_alt}
                  src={entry.data.thumbnail}
                  quality="mid"
                  decoding="async"
                  loading="eager"
                  widths={[
                    640, 768, 544, 424, 412,
                    // entry.data.thumbnail.width / 4,
                    // entry.data.thumbnail.width / 2,
                    // entry.data.thumbnail.width,
                  ]}
                  sizes={`(width < 640px) ${640}px,
              (640px <= width < 768px) ${768}px,
              (768px <= width < 1024px) ${640}px,
              (1024px <= width < 1280px) ${424}px,
              (1280px <= width) ${412}px`}
                />
                {/* <!-- Title --> */}
                <h2 slot="title" class="card-title">
                  {entry.data.title}
                </h2>
                {/* <!-- Body --> */}
                <p slot="description">{entry.data.short_description}</p>
                {/* <!-- Actions --> */}
                <Fragment slot="actions">
                  {entry.data.badges.map(
                    (badge: { type: string; label: string }) => (
                      <div class={`badge badge-${badge.type}`}>
                        {badge.label}
                      </div>
                    ),
                  )}
                </Fragment>
                <a
                  slot="button"
                  class="btn btn-primary btn-sm ml-auto"
                  href={`/${languageTag()}/projects/${stripLanguageTag(entry.slug)}`}
                >
                  {m.more_info_button()}
                </a>
              </ProjectCard>
            </div>
          ))
        }
      </div>
    </section>
  </main>

  <!-- General styling -->
  <style>
    /* under sm screens */
    @media screen and (width < 640px) {
      html {
        scroll-behavior: smooth;
      }

      #main {
        display: flex;
        flex-flow: column nowrap;
        align-items: stretch;
      }

      /* Very small screens (Ex: Samsung Galaxy S8) */
      @media screen and (height < 800px) {
      }
    }

    /* sm screens */
    @media screen and (640px <= width < 768px) {
      html {
        scroll-behavior: smooth;
      }

      #main {
        /* max-width: 640px; */
        @apply max-w-xl;

        display: flex;
        flex-flow: column nowrap;
        margin-left: auto;
        margin-right: auto;
      }
    }

    /* md screens */
    @media screen and (768px <= width < 1024px) {
      html {
        scroll-behavior: smooth;
      }

      #main {
        /* max-width: 640px; */
        @apply max-w-2xl;

        display: flex;
        flex-flow: column nowrap;
        margin-left: auto;
        margin-right: auto;
      }

      #project-cards {
      }
    }

    /* lg screens */
    @media screen and (1024px <= width < 1280px) {
      #main {
        @apply max-w-4xl;

        display: flex;
        flex-flow: column nowrap;
        margin-left: auto;
        margin-right: auto;
      }

      #project-cards {
      }

      .project-card-wrapper {
        /* @apply min-w-48 max-w-md; */
      }

      /* Animations for lg screens */
      @media screen and (prefers-reduced-motion: no-preference) {
        #projects {
          opacity: 0;

          animation: fade-in 250ms ease-out forwards;
          animation-delay: 100ms;
        }

        @keyframes fade-in {
          from {
            opacity: 0;
          }

          to {
            opacity: 1;
          }
        }
      }
    }

    /* xl screens and above */
    @media screen and (1280px <= width) {
      #scroll-hint {
        display: none;
      }

      #main {
        /* @apply max-w-6xl; */

        display: flex;
        flex-flow: column nowrap;
        margin-left: auto;
        margin-right: auto;
      }

      #project-cards {
        /* @apply grid gap-4;

        grid-template-columns: repeat(3, 1fr); */
      }

      .project-card-wrapper {
        /* flex-basis: 33%; */
      }
    }

    /* Animations */
    @media screen and (prefers-reduced-motion: no-preference) {
    }
    /* ---- */

    :global(.badge-ghost) {
      /* @apply outline outline-1; */
      @apply border border-solid border-neutral-content;
    }
  </style>

  <!-- Tooltips -->
  <style>
    [data-tooltip] {
      display: flex;
      /* align-items: end; */
      justify-content: center;
    }

    [data-tooltip]::after {
      content: attr(data-tooltip);
      display: inline-block;
      position: absolute;
      scale: 0%;
      transition: scale 250ms;
      transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);

      @apply mt-12 rounded-md bg-info p-1 text-info-content;
    }

    [data-tooltip]:hover:after {
      scale: 100%;
    }
  </style>

  <!-- Modal dialog -->
  <style>
    /*   Open state of the dialog  */
    dialog[open] {
      opacity: 1;
      /* transform: scaleY(1); */
      transform: scale(1);
    }

    /*   Closed state of the dialog   */
    dialog {
      opacity: 0;
      /* transform: scaleY(0); */
      transform: scale(0);
      transition:
        opacity 0.2s ease-out,
        transform 0.2s ease-out,
        overlay 0.2s ease-out allow-discrete,
        display 0.2s ease-out allow-discrete;
      /* Equivalent to
  transition: all 0.7s allow-discrete; */
    }

    /*   Before-open state  */
    /* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
    @starting-style {
      dialog[open] {
        opacity: 0;
        /* transform: scaleY(0); */
        transform: scale(0);
      }
    }

    /* Transition the :backdrop when the dialog modal is promoted to the top layer */
    dialog::backdrop {
      background-color: rgb(0 0 0 / 0%);
      transition:
        display 0.1s allow-discrete,
        overlay 0.1s allow-discrete,
        background-color 0.1s;
      /* Equivalent to
  transition: all 0.7s allow-discrete; */
    }

    dialog[open]::backdrop {
      background-color: rgb(0 0 0 / 25%);
    }

    /* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

    @starting-style {
      dialog[open]::backdrop {
        background-color: rgb(0 0 0 / 0%);
      }
    }
  </style>

  <!-- Tabs -->
  <style>
    .tabs {
      display: flex;
      flex-wrap: wrap;
      margin: 0 auto 20px;
      border-radius: 10px 10px 0 0;
    }

    .radiotab {
      position: absolute;
      opacity: 0;
    }

    .label {
      width: 100%;
      padding: 22px 20px;
      background: #e5e5e5;
      cursor: pointer;
      font-weight: bold;
      font-size: 23px;
      color: #7f7f7f;
      transition:
        background 0.3s,
        color 0.3s;
      border: none;
      border-radius: 0;
      text-align: center;
    }

    .label:hover {
      background: #d8d8d8;
    }

    .label:active {
      background: #ccc;
    }

    .radiotab:checked + .label {
      background: #fff;
      color: #000;
      border-top: solid 2px #000;
      border-left: solid 2px #000;
      border-right: solid 2px #000;
      border-bottom: none;
    }

    .panel {
      display: none;
      padding: 20px 30px 30px;
      background: #fff;
      width: 100%;
      border-left: solid 2px #000;
      border-bottom: solid 2px #000;
      border-right: solid 2px #000;
    }

    .radiotab:checked + .label + .panel {
      display: block;
    }

    .panel {
      order: 99;
    }

    .label {
      width: 33.33%;
      border-radius: 10px 10px 0 0;
      border-bottom: solid 2px #000;
    }
  </style>

  <!-- Scrolling marquee -->
  <style>
    .b-section {
      container-type: inline-size;
    }
    .b-section-marquee-box {
      display: flex;
      align-items: stretch;
      overflow: hidden;

      max-width: 100cqw;
      overflow-x: hidden;
    }
    .b-section-marquee-box .marquee-text {
      white-space: nowrap;
      flex-shrink: 0;
      /* width: max-content; */
      display: flex;
      align-items: center;
      translate: 0 0;
    }

    @keyframes b-text-scroll {
      0% {
        /* transform: translate3d(0, 0, 0); */
        translate: 0 0;
      }
      100% {
        /* transform: translate3d(-100%, 0, 0); */
        translate: -100% 0;
      }
    }

    @media screen and (prefers-reduced-motion: no-preference) {
      .b-section-marquee-box .marquee-text {
        animation: b-text-scroll 10s linear infinite;
      }
    }
  </style>
</ProjectsLayout>
